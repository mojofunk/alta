#! /usr/bin/env python
# encoding: utf-8
# Tim Mayberry, 2008


def init():
    pass


def configure(conf):
    print ("configure mojo-midi-driver-winmme")
    conf.env.HAVE_WINMM = conf.check_cc(
        fragment='''
        #include <windows.h>
        #include <mmsystem.h>
        int main(void) { return 0; }''',
        lib='winmm',
        uselib_store='WINMM',
        mandatory=0)


def build(bld):
    if not bld.env.HAVE_WINMM:
        return

    if bld.env.ENABLE_AMALGAMATION:
        source = 'mojo-winmme-midi-driver.cpp'
        defines = 'MOJO_AMALGAMATED'
    else:
        source = bld.path.ant_glob('*.cpp',
                                   excl='mojo-winmme-midi-driver.cpp')
        defines = ''

    uselib = [
        'GMODULE-2.0',
        'BOOST_FILESYSTEM',
        'BOOST_SYSTEM',
        'WINMM']
    target = 'mojo-midi-driver-winmme'

    if bld.env.ENABLE_SHARED:
        use_shared = [
            'MOJO_MIDI_DRIVER_SHARED',
            'MOJO_CORE_SHARED']
        bld.shlib(includes='.',
                  source=source,
                  uselib=uselib,
                  use=use_shared,
                  defines=defines,
                  target=target,
                  name='MOJO_MIDI_DRIVER_WINMME_SHARED')

    if bld.env.ENABLE_STATIC:
        use_static = [
            'MOJO_MIDI_DRIVER_STATIC',
            'MOJO_CORE_STATIC']
        bld.stlib(includes='.',
                  source=source,
                  uselib=uselib,
                  use=use_static,
                  defines=defines,
                  target=target,
                  name='MOJO_MIDI_DRIVER_WINMME_STATIC')
