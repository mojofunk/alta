#! /usr/bin/env python
# encoding: utf-8
# Tim Mayberry, 2008

tests = '''
test_application
test_debug
test_resource
test_sequence
test_spinwait
test_state_tracker
test_string_convert
test_string_compose
test_timing
test_type_system
test_graph
test_module_utils
test_project
test_audio_clip
test_filesystem_paths
test_project_directory
test_file_utils
test_archive_modules
test_audiofile_modules
test_audio_driver_modules
test_audio_effect_modules
'''.split()


def init():
    pass


def configure(conf):
    print "configure mojo tests"


def build_shared(bld):
    bld.shlib(
        source=['test_common.cpp', 'example_application.cpp'],
        includes='.',
        defines='BOOST_TEST_DYN_LINK=1',
        uselib=[
            'BOOST_UNIT_TEST_FRAMEWORK',
            'BOOST_FILESYSTEM',
            'BOOST_SYSTEM',
            'GLIB-2.0'],
        use=[
            'MOJO_CORE_SHARED',
            'MOJO_ENGINE_SHARED',
            'MOJO_APPLICATION_SHARED'],
        target='mojo-test-common',
        name='MOJO_TEST_COMMON_SHARED')
    for test in tests:
        bld.program(
            source=test + '.cpp',
            includes='.',
            defines='BOOST_TEST_DYN_LINK=1',
            uselib=[
                'BOOST_UNIT_TEST_FRAMEWORK',
                'BOOST_FILESYSTEM',
                'BOOST_SYSTEM',
                'GLIB-2.0'],
            use=[
                'MOJO_CORE_SHARED',
                'MOJO_ENGINE_SHARED',
                'MOJO_APPLICATION_SHARED',
                'MOJO_TEST_COMMON_SHARED'],
            target=test)


def build_static(bld):
    bld.stlib(
        source=['test_common.cpp', 'example_application.cpp'],
        includes='.',
        defines='BOOST_TEST_DYN_LINK=1',
        uselib=[
            'BOOST_UNIT_TEST_FRAMEWORK',
            'BOOST_FILESYSTEM',
            'BOOST_SYSTEM',
            'GLIB-2.0'],
        use=[
            'MOJO_CORE_STATIC',
            'MOJO_ENGINE_STATIC',
            'MOJO_APPLICATION_STATIC'],
        target='mojo-test-common',
        name='MOJO_TEST_COMMON_STATIC')
    for test in tests:
        bld.program(
            source=test + '.cpp',
            includes='.',
            defines='BOOST_TEST_DYN_LINK=1',
            uselib=[
                'BOOST_UNIT_TEST_FRAMEWORK',
                'BOOST_FILESYSTEM',
                'BOOST_SYSTEM',
                'GLIB-2.0'],
            use=[
                'MOJO_CORE_STATIC',
                'MOJO_ENGINE_STATIC',
                'MOJO_APPLICATION_STATIC',
                'MOJO_TEST_COMMON_STATIC'],
            target=test)


def build(bld):

    if bld.env['ENABLE_SHARED']:
        build_shared(bld)
    else:
        build_static(bld)
